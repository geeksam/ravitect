<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>rtx</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~R</string>
	<key>name</key>
	<string>Ravitect</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#everything</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>Actor</key>
		<dict>
			<key>comment</key>
			<string>Non-compound words that are nevertheless Very Important</string>
			<key>match</key>
			<string>\b(User|System)\b</string>
			<key>name</key>
			<string>variable.other.ravitect.vip_word</string>
		</dict>
		<key>VIPWord</key>
		<dict>
			<key>comment</key>
			<string>words important enough to rate CamelCase</string>
			<key>match</key>
			<string>\b[A-Z]\w*[A-Z]\w*\b</string>
			<key>name</key>
			<string>variable.other.ravitect.vip_word</string>
		</dict>
		<key>action_or_clarifier</key>
		<dict>
			<key>comment</key>
			<string>list_projects is an action; not_permitted is a special case... but they share syntax. underscored_word preceded by a colon</string>
			<key>match</key>
			<string>(?&lt;=\:)\b[a-z_]+\b</string>
			<key>name</key>
			<string>variable.other.ravitect.action_or_clarifier</string>
		</dict>
		<key>bracketed_annotation</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>markup.other.ravitect.annotation.brackets</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#everything</string>
				</dict>
			</array>
		</dict>
		<key>everything</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#Actor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bracketed_annotation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parenthetical</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#VIPWord</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#action_or_clarifier</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>other keyword</string>
					<key>match</key>
					<string>\b(actor|alternate)\b</string>
					<key>name</key>
					<string>keyword.other.ravitect</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>control keyword</string>
					<key>match</key>
					<string>\b(if|unless|end)\b</string>
					<key>name</key>
					<string>keyword.control.ravitect</string>
				</dict>
			</array>
		</dict>
		<key>parenthetical</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>markup.other.ravitect.annotation.parens</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#everything</string>
				</dict>
			</array>
		</dict>
		<key>symbol</key>
		<dict>
			<key>comment</key>
			<string>Simple Ruby-style symbols. Hey, I just used a negative look-behind assertion!</string>
			<key>match</key>
			<string>(?&lt;!\w)\:\w+</string>
			<key>name</key>
			<string>constant.other.symbol.ravitect</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.ravitect</string>
	<key>uuid</key>
	<string>7187AC5F-939F-433B-BF88-0593412CB7C0</string>
</dict>
</plist>
